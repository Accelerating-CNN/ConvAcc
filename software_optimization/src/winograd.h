#ifndef WINOGRAD_H
#define WINOGRAD_H 0

typedef const struct WSTRUCT{ 
	const float ** G;
	const float ** Bt;
	const float ** At;
	const int tile_size;
	const int tile_stride;
	const int kernel_size;
	const int out_size;
}WINOGRAD_STRUCT;


/* Winograd Transformation Matrices for F(2,3) */
static const float * At2_3[]={
	(const float [4]){      1.f,      1.f,      1.f,       0.f},
	(const float [4]){      0.f,      1.f,     -1.f,       1.f},
};

static const float * G2_3[]={
	(const float [3]){      1.f,      0.f,       0.f},
	(const float [3]){    1/2.f,    1/2.f,     1/2.f},
	(const float [3]){    1/2.f,   -1/2.f,     1/2.f},
	(const float [3]){      0.f,      0.f,       1.f},
};

static const float * Bt2_3[]={
	(const float [4]){      1.f,      0.f,     -1.f,       0.f},
	(const float [4]){      0.f,      1.f,      1.f,       0.f},
	(const float [4]){      0.f,     -1.f,      1.f,       0.f},
	(const float [4]){      0.f,     -1.f,      0.f,       1.f},
};

WINOGRAD_STRUCT Wino_F2_3={G2_3,Bt2_3,At2_3,4,2,3,2};

/* Winograd Transformation Matrices for F(4,3) */
static const float * At4_3[]={
	(const float [6]){      1.f,      1.f,      1.f,      1.f,      1.f,       0.f},
	(const float [6]){      0.f,      1.f,     -1.f,     -2.f,      2.f,       0.f},
	(const float [6]){      0.f,      1.f,      1.f,      4.f,      4.f,       0.f},
	(const float [6]){      0.f,      1.f,     -1.f,     -8.f,      8.f,       1.f},
};

static const float * G4_3[]={
	(const float [3]){    1/4.f,      0.f,       0.f},
	(const float [3]){   -1/6.f,   -1/6.f,    -1/6.f},
	(const float [3]){   -1/6.f,    1/6.f,    -1/6.f},
	(const float [3]){   1/24.f,  -1/12.f,     1/6.f},
	(const float [3]){   1/24.f,   1/12.f,     1/6.f},
	(const float [3]){      0.f,      0.f,       1.f},
};

static const float * Bt4_3[]={
	(const float [6]){      4.f,      0.f,     -5.f,      0.f,      1.f,       0.f},
	(const float [6]){      0.f,     -4.f,     -4.f,      1.f,      1.f,       0.f},
	(const float [6]){      0.f,      4.f,     -4.f,     -1.f,      1.f,       0.f},
	(const float [6]){      0.f,      2.f,     -1.f,     -2.f,      1.f,       0.f},
	(const float [6]){      0.f,     -2.f,     -1.f,      2.f,      1.f,       0.f},
	(const float [6]){      0.f,      4.f,      0.f,     -5.f,      0.f,       1.f},
};

WINOGRAD_STRUCT Wino_F4_3={G4_3,Bt4_3,At4_3,6,4,3,4};

/* Winograd Transformation Matrices for F(4,5) */
static const float * At4_5[]={
	(const float [8]){      1.f,      1.f,      1.f,      1.f,      1.f,      1.f,      1.f,       0.f},
	(const float [8]){      0.f,      1.f,     -1.f,     -2.f,      2.f,    1/2.f,   -1/2.f,       0.f},
	(const float [8]){      0.f,      1.f,      1.f,      4.f,      4.f,    1/4.f,    1/4.f,       0.f},
	(const float [8]){      0.f,      1.f,     -1.f,     -8.f,      8.f,    1/8.f,   -1/8.f,       1.f},
};

static const float * G4_5[]={
	(const float [5]){      1.f,      0.f,      0.f,      0.f,       0.f},
	(const float [5]){   -2/9.f,   -2/9.f,   -2/9.f,   -2/9.f,    -2/9.f},
	(const float [5]){   -2/9.f,    2/9.f,   -2/9.f,    2/9.f,    -2/9.f},
	(const float [5]){   1/90.f,  -1/45.f,   2/45.f,  -4/45.f,    8/45.f},
	(const float [5]){   1/90.f,   1/45.f,   2/45.f,   4/45.f,    8/45.f},
	(const float [5]){  32/45.f,  16/45.f,   8/45.f,   4/45.f,    2/45.f},
	(const float [5]){  32/45.f, -16/45.f,   8/45.f,  -4/45.f,    2/45.f},
	(const float [5]){      0.f,      0.f,      0.f,      0.f,       1.f},
};

static const float * Bt4_5[]={
	(const float [8]){      1.f,      0.f,  -21/4.f,      0.f,   21/4.f,      0.f,     -1.f,       0.f},
	(const float [8]){      0.f,      1.f,      1.f,  -17/4.f,  -17/4.f,      1.f,      1.f,       0.f},
	(const float [8]){      0.f,     -1.f,      1.f,   17/4.f,  -17/4.f,     -1.f,      1.f,       0.f},
	(const float [8]){      0.f,   -1/2.f,    1/4.f,    5/2.f,   -5/4.f,     -2.f,      1.f,       0.f},
	(const float [8]){      0.f,    1/2.f,    1/4.f,   -5/2.f,   -5/4.f,      2.f,      1.f,       0.f},
	(const float [8]){      0.f,      2.f,      4.f,   -5/2.f,     -5.f,    1/2.f,      1.f,       0.f},
	(const float [8]){      0.f,     -2.f,      4.f,    5/2.f,     -5.f,   -1/2.f,      1.f,       0.f},
	(const float [8]){      0.f,     -1.f,      0.f,   21/4.f,      0.f,  -21/4.f,      0.f,       1.f},
};

WINOGRAD_STRUCT Wino_F4_5={G4_5,Bt4_5,At4_5,8,4,5,4};

/* Winograd Transformation Matrices for F(4,7) */
static const float * At4_7[]={
	(const float [10]){      1.f,      1.f,      1.f,      1.f,      1.f,      1.f,      1.f,      1.f,      1.f,       0.f},
	(const float [10]){      0.f,      1.f,     -1.f,     -2.f,      2.f,    1/2.f,   -1/2.f,      4.f,     -4.f,       0.f},
	(const float [10]){      0.f,      1.f,      1.f,      4.f,      4.f,    1/4.f,    1/4.f,     16.f,     16.f,       0.f},
	(const float [10]){      0.f,      1.f,     -1.f,     -8.f,      8.f,    1/8.f,   -1/8.f,     64.f,    -64.f,       1.f},
};

static const float * G4_7[]={
	(const float [7]){   1/16.f,      0.f,      0.f,      0.f,      0.f,      0.f,       0.f},
	(const float [7]){  2/135.f,  2/135.f,  2/135.f,  2/135.f,  2/135.f,  2/135.f,   2/135.f},
	(const float [7]){  2/135.f, -2/135.f,  2/135.f, -2/135.f,  2/135.f, -2/135.f,   2/135.f},
	(const float [7]){-1/1080.f,  1/540.f, -1/270.f,  1/135.f, -2/135.f,  4/135.f,  -8/135.f},
	(const float [7]){-1/1080.f, -1/540.f, -1/270.f, -1/135.f, -2/135.f, -4/135.f,  -8/135.f},
	(const float [7]){-128/2835.f,-64/2835.f,-32/2835.f,-16/2835.f,-8/2835.f,-4/2835.f, -2/2835.f},
	(const float [7]){-128/2835.f,64/2835.f,-32/2835.f,16/2835.f,-8/2835.f, 4/2835.f, -2/2835.f},
	(const float [7]){1/90720.f,1/22680.f, 1/5670.f, 2/2835.f, 8/2835.f,32/2835.f,128/2835.f},
	(const float [7]){1/90720.f,-1/22680.f, 1/5670.f,-2/2835.f, 8/2835.f,-32/2835.f,128/2835.f},
	(const float [7]){      0.f,      0.f,      0.f,      0.f,      0.f,      0.f,       1.f},
};

static const float * Bt4_7[]={
	(const float [10]){     16.f,      0.f,    -85.f,      0.f,  357/4.f,      0.f,  -85/4.f,      0.f,      1.f,       0.f},
	(const float [10]){      0.f,    -16.f,    -16.f,     69.f,     69.f,  -81/4.f,  -81/4.f,      1.f,      1.f,       0.f},
	(const float [10]){      0.f,     16.f,    -16.f,    -69.f,     69.f,   81/4.f,  -81/4.f,     -1.f,      1.f,       0.f},
	(const float [10]){      0.f,      8.f,     -4.f,  -81/2.f,   81/4.f,   69/2.f,  -69/4.f,     -2.f,      1.f,       0.f},
	(const float [10]){      0.f,     -8.f,     -4.f,   81/2.f,   81/4.f,  -69/2.f,  -69/4.f,      2.f,      1.f,       0.f},
	(const float [10]){      0.f,    -32.f,    -64.f,     42.f,     84.f,  -21/2.f,    -21.f,    1/2.f,      1.f,       0.f},
	(const float [10]){      0.f,     32.f,    -64.f,    -42.f,     84.f,   21/2.f,    -21.f,   -1/2.f,      1.f,       0.f},
	(const float [10]){      0.f,     -4.f,     -1.f,     21.f,   21/4.f,    -21.f,  -21/4.f,      4.f,      1.f,       0.f},
	(const float [10]){      0.f,      4.f,     -1.f,    -21.f,   21/4.f,     21.f,  -21/4.f,     -4.f,      1.f,       0.f},
	(const float [10]){      0.f,     16.f,      0.f,    -85.f,      0.f,  357/4.f,      0.f,  -85/4.f,      0.f,       1.f},
};

WINOGRAD_STRUCT Wino_F4_7={G4_7,Bt4_7,At4_7,10,4,7,4};

/* Winograd Transformation Matrices for F(4,11) */
static const float * At4_11[]={
	(const float [14]){      1.f,      1.f,      1.f,      1.f,      1.f,      1.f,      1.f,      1.f,      1.f,      1.f,      1.f,      1.f,      1.f,       0.f},
	(const float [14]){      0.f,      1.f,     -1.f,     -2.f,      2.f,    1/2.f,   -1/2.f,      4.f,     -4.f,    1/4.f,   -1/4.f,      8.f,     -8.f,       0.f},
	(const float [14]){      0.f,      1.f,      1.f,      4.f,      4.f,    1/4.f,    1/4.f,     16.f,     16.f,   1/16.f,   1/16.f,     64.f,     64.f,       0.f},
	(const float [14]){      0.f,      1.f,     -1.f,     -8.f,      8.f,    1/8.f,   -1/8.f,     64.f,    -64.f,   1/64.f,  -1/64.f,    512.f,   -512.f,       1.f},
};

static const float * G4_11[]={
	(const float [11]){   1/64.f,      0.f,      0.f,      0.f,      0.f,      0.f,      0.f,      0.f,      0.f,      0.f,       0.f},
	(const float [11]){-32/127575.f,-32/127575.f,-32/127575.f,-32/127575.f,-32/127575.f,-32/127575.f,-32/127575.f,-32/127575.f,-32/127575.f,-32/127575.f,-32/127575.f},
	(const float [11]){-32/127575.f,32/127575.f,-32/127575.f,32/127575.f,-32/127575.f,32/127575.f,-32/127575.f,32/127575.f,-32/127575.f,32/127575.f,-32/127575.f},
	(const float [11]){1/255150.f,-1/127575.f,2/127575.f,-4/127575.f,8/127575.f,-16/127575.f,32/127575.f,-64/127575.f,128/127575.f,-256/127575.f,512/127575.f},
	(const float [11]){1/255150.f,1/127575.f,2/127575.f,4/127575.f,8/127575.f,16/127575.f,32/127575.f,64/127575.f,128/127575.f,256/127575.f,512/127575.f},
	(const float [11]){8192/2168775.f,4096/2168775.f,2048/2168775.f,1024/2168775.f,512/2168775.f,256/2168775.f,128/2168775.f,64/2168775.f,32/2168775.f,16/2168775.f,8/2168775.f},
	(const float [11]){8192/2168775.f,-4096/2168775.f,2048/2168775.f,-1024/2168775.f,512/2168775.f,-256/2168775.f,128/2168775.f,-64/2168775.f,32/2168775.f,-16/2168775.f,8/2168775.f},
	(const float [11]){-1/69400800.f,-1/17350200.f,-1/4337550.f,-2/2168775.f,-8/2168775.f,-32/2168775.f,-128/2168775.f,-512/2168775.f,-2048/2168775.f,-8192/2168775.f,-32768/2168775.f},
	(const float [11]){-1/69400800.f,1/17350200.f,-1/4337550.f,2/2168775.f,-8/2168775.f,32/2168775.f,-128/2168775.f,512/2168775.f,-2048/2168775.f,8192/2168775.f,-32768/2168775.f},
	(const float [11]){-8388608/739552275.f,-2097152/739552275.f,-524288/739552275.f,-131072/739552275.f,-32768/739552275.f,-8192/739552275.f,-2048/739552275.f,-512/739552275.f,-128/739552275.f,-32/739552275.f,-8/739552275.f},
	(const float [11]){-8388608/739552275.f,2097152/739552275.f,-524288/739552275.f,131072/739552275.f,-32768/739552275.f,8192/739552275.f,-2048/739552275.f,512/739552275.f,-128/739552275.f,32/739552275.f,-8/739552275.f},
	(const float [11]){1/94662691200.f,1/11832836400.f,1/1479104550.f,4/739552275.f,32/739552275.f,256/739552275.f,2048/739552275.f,16384/739552275.f,131072/739552275.f,1048576/739552275.f,8388608/739552275.f},
	(const float [11]){1/94662691200.f,-1/11832836400.f,1/1479104550.f,-4/739552275.f,32/739552275.f,-256/739552275.f,2048/739552275.f,-16384/739552275.f,131072/739552275.f,-1048576/739552275.f,8388608/739552275.f},
	(const float [11]){      0.f,      0.f,      0.f,      0.f,      0.f,      0.f,      0.f,      0.f,      0.f,      0.f,       1.f},
};

static const float * Bt4_11[]={
	(const float [14]){     64.f,      0.f,  -1365.f,      0.f,93093/16.f,      0.f,-376805/64.f,      0.f,93093/64.f,      0.f,-1365/16.f,      0.f,      1.f,       0.f},
	(const float [14]){      0.f,    -64.f,    -64.f,   1301.f,   1301.f,-72277/16.f,-72277/16.f,87697/64.f,87697/64.f,-1349/16.f,-1349/16.f,      1.f,      1.f,       0.f},
	(const float [14]){      0.f,     64.f,    -64.f,  -1301.f,   1301.f,72277/16.f,-72277/16.f,-87697/64.f,87697/64.f,1349/16.f,-1349/16.f,     -1.f,      1.f,       0.f},
	(const float [14]){      0.f,     32.f,    -16.f,-1349/2.f, 1349/4.f,87697/32.f,-87697/64.f,-72277/32.f,72277/64.f, 1301/8.f,-1301/16.f,     -2.f,      1.f,       0.f},
	(const float [14]){      0.f,    -32.f,    -16.f, 1349/2.f, 1349/4.f,-87697/32.f,-87697/64.f,72277/32.f,72277/64.f,-1301/8.f,-1301/16.f,      2.f,      1.f,       0.f},
	(const float [14]){      0.f,   -128.f,   -256.f,   2218.f,   4436.f,-22117/8.f,-22117/4.f,22933/32.f,22933/16.f,-1361/32.f,-1361/16.f,    1/2.f,      1.f,       0.f},
	(const float [14]){      0.f,    128.f,   -256.f,  -2218.f,   4436.f,22117/8.f,-22117/4.f,-22933/32.f,22933/16.f,1361/32.f,-1361/16.f,   -1/2.f,      1.f,       0.f},
	(const float [14]){      0.f,    -16.f,     -4.f, 1361/4.f,1361/16.f,-22933/16.f,-22933/64.f,22117/16.f,22117/64.f,-1109/4.f,-1109/16.f,      4.f,      1.f,       0.f},
	(const float [14]){      0.f,     16.f,     -4.f,-1361/4.f,1361/16.f,22933/16.f,-22933/64.f,-22117/16.f,22117/64.f, 1109/4.f,-1109/16.f,     -4.f,      1.f,       0.f},
	(const float [14]){      0.f,   -256.f,  -1024.f,   1364.f,   5456.f,-5797/4.f,  -5797.f,5797/16.f, 5797/4.f,-341/16.f, -341/4.f,    1/4.f,      1.f,       0.f},
	(const float [14]){      0.f,    256.f,  -1024.f,  -1364.f,   5456.f, 5797/4.f,  -5797.f,-5797/16.f, 5797/4.f, 341/16.f, -341/4.f,   -1/4.f,      1.f,       0.f},
	(const float [14]){      0.f,     -8.f,     -1.f,  341/2.f, 341/16.f,-5797/8.f,-5797/64.f, 5797/8.f,5797/64.f, -341/2.f,-341/16.f,      8.f,      1.f,       0.f},
	(const float [14]){      0.f,      8.f,     -1.f, -341/2.f, 341/16.f, 5797/8.f,-5797/64.f,-5797/8.f,5797/64.f,  341/2.f,-341/16.f,     -8.f,      1.f,       0.f},
	(const float [14]){      0.f,     64.f,      0.f,  -1365.f,      0.f,93093/16.f,      0.f,-376805/64.f,      0.f,93093/64.f,      0.f,-1365/16.f,      0.f,       1.f},
};

WINOGRAD_STRUCT Wino_F4_11={G4_11,Bt4_11,At4_11,14,4,11,4};



#endif